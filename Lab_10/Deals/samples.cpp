#include "deals.h"
#include <iostream>
#include <vector>
#include <map>
#include <functional>

using cost = long long;

// Project Identifier: D7E20F91029D0CB08715A2C54A782E0E8DF829BF

/****************************************************
 *                                                  *
 *  (\     ___        Congrats on making it to      *
 *  (  \  /(o)\       the last lab of EECS 281!     *
 *  (   \/  ()/ /)    I hope you enjoyed the ride.  *
 *   (   `;.))'".)                                  *
 *    `(/////.-'      Good luck, and have fun       *
 * =====))=))===()    with dynamic programming!     *
 *   ///'                                           *
 *  //   PjP/ejm                ~ EECS 281 Staff    *
 * '                                                *
 *                                                  *
 ****************************************************/

int main() {
    {
        // sample #1
        // # meals == 6
	    std::vector<cost> sample_input = {3, 3, 3, 3, 3, 100};
	    std::cout << "[meal  #1] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 15) {
	        std::cout << "FAIL: expected 15 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 115
	        // total cost if only discounting with coupons: 85
	        // total cost if always applying punchcard: 15
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #2
        // # meals == 5
	    std::vector<cost> sample_input = {2, 2, 2, 2, 100};
	    std::cout << "[meal  #2] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 79) {
	        std::cout << "FAIL: expected 79 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 108
	        // total cost if only discounting with coupons: 79
	        // total cost if always applying punchcard: 108
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #3
        // # meals == 6
	    std::vector<cost> sample_input = {2, 2, 2, 2, 1000, 100};
	    std::cout << "[meal  #3] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 829) {
	        std::cout << "FAIL: expected 829 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 1108
	        // total cost if only discounting with coupons: 829
	        // total cost if always applying punchcard: 1008
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #4
        // # meals == 5
	    std::vector<cost> sample_input = {1000, 2, 2, 2, 1000};
	    std::cout << "[meal  #4] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 1503) {
	        std::cout << "FAIL: expected 1503 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 2006
	        // total cost if only discounting with coupons: 1503
	        // total cost if always applying punchcard: 2006
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #5
        // # meals == 9
	    std::vector<cost> sample_input = {1000, 2, 2, 2, 1001, 1002, 1003, 1004, 1005};
	    std::cout << "[meal  #5] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 4263) {
	        std::cout << "FAIL: expected 4263 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 6021
	        // total cost if only discounting with coupons: 4512
	        // total cost if always applying punchcard: 5019
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #6
        // # meals == 11
	    std::vector<cost> sample_input = {1000, 2, 2, 2, 1001, 1002, 1003, 1004, 1005, 1006, 1007};
	    std::cout << "[meal  #6] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 5770) {
	        std::cout << "FAIL: expected 5770 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 8034
	        // total cost if only discounting with coupons: 6021
	        // total cost if always applying punchcard: 7032
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #7
        // # meals == 12
	    std::vector<cost> sample_input = {1000, 2, 2, 2, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008};
	    std::cout << "[meal  #7] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 6525) {
	        std::cout << "FAIL: expected 6525 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 9042
	        // total cost if only discounting with coupons: 6777
	        // total cost if always applying punchcard: 7032
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #8
        // # meals == 12
	    std::vector<cost> sample_input = {1000, 2, 2, 2, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 3008};
	    std::cout << "[meal  #8] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 6525) {
	        std::cout << "FAIL: expected 6525 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 11042
	        // total cost if only discounting with coupons: 8277
	        // total cost if always applying punchcard: 7032
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #9
        // # meals == 1575
	    std::vector<cost> sample_input = {
	        11, 190, 2, 15, 138, 35, 18, 11, 14, 8, 9, 39, 5, 12, 24, 19, 22, 3,
	        870, 26, 16, 13, 38, 31, 1440, 100, 10, 18, 10, 13, 16, 35, 2, 30, 1800, 21,
	        24, 19, 35, 39, 7, 90, 21, 32, 36, 39, 35, 25, 200, 7, 224, 39, 15, 4,
	        72, 14, 39, 30, 24, 10, 31, 6, 3, 25, 12, 315, 33, 40, 21, 30, 6, 15,
	        11, 19, 31, 27, 102, 15, 40, 1116, 17, 13, 33, 25, 20, 25, 20, 495, 18, 5,
	        26, 11, 24, 32, 16, 38, 9, 29, 5, 130, 22, 51, 20, 23, 38, 32, 160, 13,
	        6, 14, 256, 18, 29, 7, 31, 37, 6, 14, 32, 25, 9, 20, 24, 88, 120, 4,
	        9, 18, 2, 64, 22, 26, 22, 21, 9, 30, 25, 38, 11, 6, 78, 25, 33, 5,
	        160, 20, 33, 23, 16, 30, 14, 37, 36, 29, 270, 3, 22, 17, 21, 2, 8, 32,
	        17, 39, 12, 12, 22, 32, 36, 22, 17, 25, 3, 18, 38, 24, 28, 36, 25, 132,
	        20, 23, 24, 23, 222, 5, 1728, 147, 24, 20, 39, 5, 144, 26, 90, 26, 26, 112,
	        3, 19, 4, 11, 54, 2, 7, 29, 23, 11, 20, 21, 31, 23, 11, 12, 26, 26,
	        80, 9, 14, 27, 22, 22, 38, 33, 15, 26, 23, 195, 9, 18, 6, 23, 21, 10,
	        132, 33, 2, 27, 31, 5, 38, 18, 5, 32, 32, 28, 12, 21, 8, 48, 35, 18,
	        120, 19, 17, 20, 20, 10, 19, 34, 13, 39, 152, 2, 25, 35, 31, 33, 33, 5,
	        31, 297, 22, 39, 34, 37, 21, 16, 40, 25, 27, 180, 18, 5, 21, 27, 6, 4,
	        3, 34, 19, 31, 30, 33, 14, 26, 30, 108, 14, 29, 16, 8, 38, 2, 38, 2,
	        310, 3, 36, 8, 17, 7, 11, 5, 320, 11, 130, 24, 16, 21, 40, 160, 24, 234,
	        27, 6, 27, 25, 28, 22, 45, 27, 13, 7, 17, 38, 972, 150, 37, 54, 28, 12,
	        12, 32, 230, 9, 35, 20, 22, 35, 39, 5, 2, 6, 14, 38, 35, 4, 14, 18,
	        5, 5, 20, 340, 54, 26, 22, 18, 38, 3, 9, 28, 5, 15, 9, 6, 31, 23,
	        105, 20, 16, 10, 17, 28, 19, 7, 37, 10, 259, 36, 22, 13, 27, 16, 28, 35,
	        27, 45, 12, 9, 238, 21, 33, 888, 196, 38, 27, 37, 9, 13, 15, 5, 3, 24,
	        34, 32, 4, 198, 280, 37, 22, 27, 30, 32, 12, 6, 21, 18, 4, 96, 34, 29,
	        63, 12, 8, 12, 33, 4, 100, 10, 140, 75, 33, 17, 240, 2, 12, 3, 23, 252,
	        19, 31, 34, 42, 30, 7, 273, 5, 6, 34, 72, 10, 13, 37, 18, 39, 22, 25,
	        29, 22, 40, 396, 24, 39, 7, 39, 23, 16, 39, 28, 25, 24, 10, 19, 32, 26,
	        16, 17, 320, 4, 4, 35, 31, 24, 14, 16, 13, 39, 10, 13, 18, 5, 32, 1240,
	        18, 22, 32, 31, 95, 24, 32, 33, 31, 10, 40, 22, 4, 23, 29, 16, 16, 117,
	        17, 36, 4, 62, 27, 22, 25, 25, 23, 49, 22, 15, 15, 36, 37, 11, 240, 31,
	        36, 16, 30, 25, 36, 25, 26, 39, 36, 31, 72, 23, 24, 13, 30, 21, 35, 10,
	        3, 160, 42, 19, 26, 22, 35, 18, 74, 5, 29, 22, 34, 28, 120, 46, 98, 8,
	        128, 77, 30, 27, 4, 2, 31, 36, 36, 27, 200, 15, 3, 19, 37, 297, 5, 14,
	        24, 35, 76, 10, 13, 13, 11, 38, 11, 23, 11, 39, 90, 13, 13, 108, 40, 35,
	        32, 19, 32, 92, 7, 133, 39, 29, 36, 15, 27, 32, 33, 29, 20, 2, 24, 23,
	        3, 19, 13, 6, 186, 4, 8, 18, 6, 26, 19, 9, 29, 33, 2, 21, 5, 28,
	        33, 36, 38, 35, 34, 11, 32, 9, 31, 27, 408, 5, 11, 16, 34, 10, 11, 39,
	        12, 10, 25, 10, 17, 16, 18, 26, 36, 2, 891, 39, 36, 19, 13, 10, 30, 5,
	        27, 18, 29, 28, 28, 7, 175, 210, 85, 171, 29, 11, 20, 33, 18, 14, 40, 39,
	        128, 38, 35, 32, 34, 35, 39, 9, 34, 10, 31, 38, 5, 30, 21, 108, 7, 4,
	        38, 17, 31, 7, 35, 9, 6, 16, 20, 25, 33, 5, 12, 21, 11, 11, 114, 27,
	        11, 34, 4, 3, 5, 5, 35, 17, 36, 30, 690, 8, 36, 72, 9, 17, 81, 23,
	        50, 40, 8, 25, 18, 7, 3, 486, 22, 6, 16, 8, 14, 10, 15, 33, 22, 16,
	        23, 13, 6, 6, 6, 27, 23, 2, 33, 26, 24, 30, 14, 306, 40, 17, 8, 30,
	        29, 15, 2, 14, 13, 30, 25, 36, 13, 35, 17, 37, 31, 27, 24, 833, 16, 10,
	        14, 18, 22, 14, 5, 19, 21, 13, 12, 20, 22, 25, 28, 30, 64, 2, 36, 32,
	        51, 9, 25, 16, 26, 4, 40, 7, 300, 11, 27, 21, 2, 24, 84, 19, 37, 12,
	        33, 14, 36, 31, 17, 80, 28, 32, 35, 5, 4, 22, 3, 2, 14, 23, 1008, 2,
	        12, 104, 4, 29, 36, 174, 11, 26, 28, 14, 36, 28, 30, 170, 3, 2, 16, 16,
	        6, 6, 38, 26, 3, 4, 12, 7, 34, 32, 114, 34, 5, 38, 3, 2, 32, 2,
	        33, 27, 17, 14, 22, 7, 28, 40, 16, 16, 22, 14, 6, 2, 9, 40, 11, 9,
	        39, 27, 310, 20, 16, 13, 40, 190, 19, 11, 14, 112, 12, 31, 6, 8, 15, 19,
	        2, 36, 19, 25, 34, 11, 12, 9, 35, 39, 12, 20, 36, 37, 2, 40, 6, 3,
	        8, 60, 31, 22, 156, 30, 25, 40, 8, 24, 37, 9, 111, 9, 4, 2, 26, 13,
	        90, 29, 31, 12, 36, 7, 10, 25, 14, 15, 6, 31, 15, 4, 3, 400, 12, 19,
	        32, 13, 444, 19, 22, 37, 9, 8, 29, 28, 189, 36, 15, 31, 18, 33, 8, 2,
	        16, 37, 2, 19, 5, 39, 8, 17, 31, 25, 33, 27, 11, 40, 22, 5, 22, 30,
	        21, 1550, 20, 33, 19, 22, 176, 27, 10, 7, 28, 5, 33, 350, 37, 40, 20, 182,
	        32, 4, 288, 23, 21, 380, 32, 6, 30, 14, 14, 23, 17, 5, 30, 28, 15, 29,
	        216, 17, 8, 33, 19, 11, 4, 13, 24, 35, 28, 25, 26, 30, 7, 37, 20, 6,
	        48, 11, 29, 3, 25, 17, 10, 38, 7, 25, 70, 19, 26, 33, 2, 37, 5, 14,
	        136, 33, 19, 2, 16, 7, 40, 72, 33, 8, 27, 10, 29, 15, 38, 37, 14, 27,
	        35, 27, 8, 11, 8, 3, 21, 30, 3, 17, 8, 7, 24, 31, 6, 22, 10, 35,
	        16, 27, 110, 19, 21, 16, 3, 18, 23, 32, 29, 12, 23, 12, 160, 23, 24, 5,
	        14, 36, 30, 21, 7, 31, 18, 23, 2268, 10, 17, 7, 20, 19, 16, 195, 34, 18,
	        26, 40, 14, 22, 37, 9, 8, 34, 5, 15, 217, 34, 26, 3, 25, 27, 168, 24,
	        20, 115, 3, 29, 16, 238, 30, 31, 4, 25, 32, 37, 13, 33, 31, 35, 36, 35,
	        24, 38, 16, 6, 37, 2, 11, 10, 27, 25, 14, 36, 19, 24, 18, 8, 33, 4,
	        17, 24, 19, 4, 8, 5, 23, 44, 25, 6, 7, 19, 35, 6, 12, 37, 12, 19,
	        35, 27, 5, 52, 29, 8, 16, 33, 29, 18, 36, 14, 13, 10, 11, 38, 38, 6,
	        35, 22, 11, 35, 16, 16, 33, 37, 40, 14, 19, 16, 40, 26, 11, 23, 39, 38,
	        290, 31, 24, 69, 17, 19, 210, 7, 40, 9, 36, 112, 34, 24, 20, 19, 7, 20,
	        30, 34, 32, 18, 495, 78, 28, 20, 2, 16, 6, 36, 20, 144, 37, 19, 136, 28,
	        2, 30, 20, 8, 9, 30, 750, 33, 39, 19, 35, 2, 17, 13, 27, 38, 172800, 5000,
	        15, 38, 8, 20, 16, 26, 7, 2, 10, 266, 25, 30, 648, 12, 4, 26, 2, 36,
	        15, 140, 546, 7, 27, 33, 40, 40, 23, 32, 13, 11, 37, 30, 14, 6, 7, 153,
	        5, 23, 36, 144, 25, 29, 10, 38, 9, 17, 32, 10, 1566, 27, 35, 25, 22, 60,
	        96, 30, 28, 3, 16, 36, 18, 19, 12, 14, 28, 288, 10, 210, 35, 8, 21, 12,
	        32, 91, 22, 108, 7, 6, 14, 34, 8, 39, 1950, 14, 7, 32, 23, 34, 7, 88,
	        30, 15, 252, 9, 25, 27, 23, 30, 10, 2, 15, 7, 34, 8, 2, 30, 35, 37,
	        102, 39, 3, 8, 23, 10, 28, 21, 14, 31, 27, 24, 10, 32, 29, 22, 252, 306,
	        37, 29, 25, 27, 8, 22, 5, 45, 35, 12, 250, 34, 3, 6, 24, 22, 38, 2,
	        8, 124, 306, 22, 23, 3, 34, 36, 5, 19, 72, 21, 6, 210, 20, 10, 33, 9,
	        18, 10, 22, 26, 630, 37, 28, 880, 10, 6, 29, 33, 20, 3, 25, 37, 15, 11,
	        36, 3, 13, 16, 13, 35, 31, 21, 6, 24, 34, 10, 17, 19, 39, 39, 76, 6,
	        19, 37, 20, 18, 23, 21, 14, 95, 22, 120, 6, 40, 19, 26, 22, 34, 279, 21,
	        11, 29, 24, 32, 204, 23, 5, 23, 228, 36, 40, 36, 24, 10, 39, 13, 30, 36,
	        22, 33, 13, 24, 266, 12, 28, 29, 28
	    };
	    std::cout << "[meal  #9] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 33929) {
	        std::cout << "FAIL: expected 33929 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 259253
	        // total cost if only discounting with coupons: 193884
	        // total cost if always applying punchcard: 244346
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #10
        // # meals == 1509
	    std::vector<cost> sample_input = {
	        207, 52, 20, 340, 40, 11, 4, 9, 9, 20, 37, 25, 14, 12, 25, 6, 6, 15,
	        26, 40, 272, 16, 35, 207, 38, 108, 156, 20, 15, 5, 4, 14, 10, 32, 24, 35,
	        18, 23, 32, 28, 30, 10, 22, 7, 156, 29, 36, 13, 14, 21, 19, 34, 39, 23,
	        27, 24, 3, 11, 170, 22, 23, 6, 33, 14, 36, 27, 29, 2, 19, 3240, 248, 28,
	        33, 3, 34, 32, 23, 40, 81, 24, 260, 5, 12, 24, 29, 14, 31, 11, 36, 27,
	        23, 7, 136, 34, 26, 20, 2, 2, 32, 3, 7, 24, 170, 7, 175, 18, 84, 5,
	        29, 3, 12, 74, 15, 16, 9, 32, 33, 13, 10, 6, 36, 36, 17, 21, 31, 26,
	        36, 30, 23, 13, 25, 27, 31, 23, 360, 15, 324, 40, 40, 27, 25, 2, 2, 2,
	        16, 37, 15, 3, 12, 22, 19, 24, 24, 21, 32, 28, 33, 14, 40, 27, 27, 27,
	        5, 3, 16, 18, 31, 10, 21, 4, 72, 32, 40, 24, 23, 12, 35, 40, 18, 29,
	        22, 16, 15, 28, 31, 6, 342, 29, 33, 10, 8, 11, 10, 7, 8, 30, 360, 11,
	        27, 26, 22, 8, 25, 22, 37, 90, 16, 13, 3, 210, 150, 36, 17, 34, 2, 30,
	        490, 4, 21, 34, 21, 28, 13, 36, 10, 33, 9, 13, 26, 32, 27, 12, 25, 7,
	        8, 4, 38, 1240, 28, 87, 22, 216, 26, 130, 24, 32, 14, 128, 33, 12, 5, 72,
	        6, 35, 10, 15, 392, 27, 80, 13, 88, 32, 38, 7, 16, 39, 130, 22, 24, 396,
	        21, 252, 36, 10, 22, 17, 272, 34, 296, 39, 12, 38, 30, 35, 29, 18, 16, 60,
	        16, 26, 3, 20, 16, 66, 156, 40, 33, 31, 6, 17, 23, 7, 38, 20, 32, 13,
	        16, 14, 36, 28, 110, 230, 39, 4, 28, 13, 38, 7, 33, 26, 13, 8, 22, 38,
	        27, 24, 1215, 28, 34, 198, 14, 5, 21, 22, 84, 22, 21, 14, 2, 99, 306, 40,
	        35, 259, 126, 7, 5, 14, 40, 26, 11, 3, 20, 10, 25, 33, 37, 324, 152, 2,
	        22, 20, 8, 30, 27, 21, 119, 1344, 12, 108, 33, 5, 32, 3400, 30, 19, 20, 1280,
	        16, 32, 36, 400, 6, 20, 14, 15, 27, 96, 20, 37, 6, 17, 33, 2, 62, 36,
	        27, 2070, 27, 25, 17, 25, 23, 38, 20, 2, 2268, 8, 26, 21, 12, 23, 35, 32,
	        10, 18, 145, 10, 35, 24, 4, 222, 102, 40, 35, 28, 27, 15, 3, 22, 2, 25,
	        23, 23, 37, 11, 14, 30, 16, 22, 6, 30, 8, 37, 15, 11, 693, 36, 126, 36,
	        63, 20, 7, 32, 13, 28, 14, 156, 7, 8, 2, 39, 35, 10, 16, 28, 72, 114,
	        35, 3, 14, 46, 17, 28, 340, 114, 30, 17, 133, 238, 126, 16, 22, 21, 27, 26,
	        2, 2, 22, 3, 24, 78, 5, 13, 21, 32, 40, 28, 13, 23, 26, 8, 39, 40,
	        5, 6, 36, 112, 18, 20, 21, 105, 21, 12, 16, 15, 720, 19, 486, 31, 7, 5,
	        22, 7, 4, 7, 23, 20, 23, 13, 2, 9, 25, 18, 14, 40, 7, 30, 24, 14,
	        15, 39, 6, 7, 18, 39, 72, 38, 5, 11, 39, 14, 2, 11, 32, 816, 17, 13,
	        12, 7, 28, 22, 27, 20, 296, 29, 12, 238, 264, 50, 28, 36, 7, 3, 11, 3,
	        174, 10, 4, 84, 6, 147, 4, 2, 25, 16, 2394, 37, 23, 8, 37, 14, 3, 22,
	        21, 23, 6, 33, 31, 17, 19, 11, 40, 26, 36, 28, 140, 31, 37, 22, 37, 31,
	        19, 27, 21, 3, 12, 558, 34, 37, 34, 14, 27, 25, 12, 37, 19, 9, 22, 16,
	        17, 35, 29, 39, 30, 24, 12, 37, 40, 35, 2, 13, 38, 5, 29, 12, 27, 8,
	        40, 19, 37, 35, 31, 108, 38, 200, 19, 9, 28, 70, 259, 100, 8, 17, 18, 11,
	        6, 27, 20, 35, 22, 27, 19, 40, 16, 29, 23, 490, 30, 4, 34, 18, 30, 9,
	        32, 279, 198, 1680, 10, 29, 38, 3, 22, 14, 45, 7, 40, 15, 80, 12, 6, 296,
	        10, 22, 36, 31, 8, 14, 54, 5, 39, 5, 31, 5, 20, 15, 4, 38, 29, 22,
	        13, 19, 9, 45, 33, 14, 25, 14, 16, 9, 28, 17, 6, 29, 33, 4, 40, 340,
	        29, 36, 64, 35, 7, 5, 4, 24, 5, 26, 26, 2, 6, 27, 22, 24, 36, 8,
	        25, 24, 30, 27, 26, 4, 19, 22, 34, 10, 19, 40, 40, 140, 34, 18, 32, 17,
	        33, 10, 42, 15, 29, 17, 2730, 9, 28, 17, 15, 120, 35, 72, 33, 19, 21, 10,
	        30, 9, 7, 38, 34, 37, 390, 13, 54, 64, 10, 31, 200, 31, 16, 5, 14, 8,
	        4, 37, 28, 40, 30, 3, 4, 19, 42, 5, 200, 37, 8, 27, 16, 39, 24, 1656,
	        32, 35, 40, 28, 7, 27, 29, 31, 19, 14, 38, 32, 28, 18, 31, 10, 37, 24,
	        38, 7, 2664, 5, 4, 16, 6, 12, 25, 28, 136, 40, 36, 34, 28, 34, 35, 21,
	        7, 116, 30, 210, 33, 29, 26, 70, 5, 36, 6, 18, 120, 96, 20, 37, 7, 16,
	        4, 198, 13, 29, 52, 30, 91, 23, 20, 60, 13, 35, 14, 35, 32, 3, 8, 468,
	        30, 3, 30, 4, 7, 36, 9, 24, 34, 28, 11, 64, 30, 30, 80, 36, 10, 25,
	        18, 10, 21, 30, 20, 20, 33, 13, 40, 30, 36, 39, 32, 16, 20, 6, 15, 27,
	        11, 34, 740, 12, 15, 11, 37, 32, 36, 42, 240, 9, 8, 34, 37, 21, 17, 29,
	        29, 37, 15, 15, 13, 6, 20, 27, 3, 38, 15, 40, 24, 20, 14, 14, 8, 124,
	        23, 20, 184, 33, 30, 40, 76, 17, 25, 30, 21, 29, 26, 28, 33, 17, 13, 20,
	        35, 36, 40, 20, 24, 8, 35, 2, 23, 35, 200, 207, 171, 15, 27, 27, 15, 87,
	        5, 26, 11, 4, 20, 20, 16, 27, 4, 16, 40, 6, 10, 36, 15, 17, 192, 18,
	        32, 31, 3, 13, 3, 38, 20, 30, 33, 31, 30, 210, 30, 6, 280, 27, 23, 16,
	        20, 26, 400, 114, 4, 306, 15, 3, 23, 23, 27, 4, 8, 8, 13, 38, 12, 21,
	        70, 24, 4, 20, 1140, 46, 40, 8, 7, 40, 57, 756, 80, 21, 195, 22, 9, 22,
	        40, 2, 2, 6, 4, 39, 9, 21, 5, 12, 5, 39, 33, 16, 2, 23, 29, 23,
	        32, 32, 4, 30, 16, 21, 38, 24, 8, 10, 390, 23, 17, 18, 38, 155, 2, 24,
	        36, 30, 198, 11, 25, 14, 38, 5, 40, 84, 78, 26, 21, 78, 39, 35, 13, 40,
	        7, 2, 17, 15, 33, 32, 648, 20, 104, 9, 2, 32, 28, 11, 700, 5, 3, 5,
	        24, 20, 35, 31, 7, 20, 37, 35, 17, 6, 10, 2, 40, 36, 15, 33, 2, 12,
	        25, 15, 5, 24, 11, 16, 9, 10, 2, 21, 33, 25, 15, 37, 27, 10, 68, 9,
	        25, 5, 39, 245, 25, 31, 28, 34, 76, 20, 22, 20, 5, 9, 3, 9702, 8, 25,
	        90, 7, 30, 25, 25, 17, 48, 33, 32, 39, 39, 84, 108, 162, 40, 14, 232, 117,
	        30, 161, 13, 12, 100, 23, 35, 3, 20, 38, 126, 38, 18, 228, 6, 22, 32, 2,
	        37, 11, 22, 16, 10, 27, 7, 8, 180, 29, 31, 8, 80, 6, 324, 28, 23, 224,
	        17, 35, 30, 28, 2, 11, 21, 29, 126, 7, 2, 900, 34, 40, 18, 70, 12, 24,
	        20, 22, 26, 30, 13, 31, 20, 8, 34, 34, 56, 16, 34, 35, 2, 11, 13, 25,
	        16, 5, 28, 33, 39, 46, 560, 11, 11, 84, 40, 36, 12, 35, 38, 259, 25, 38,
	        34, 35, 119, 7, 6, 4, 18, 1620, 12, 12, 25, 39, 16, 36, 18, 9, 14, 37,
	        28, 24, 25, 72, 24, 18, 19, 27, 4, 22, 12, 26, 13, 40, 29, 10, 8, 39,
	        9, 34, 40, 25, 36, 17, 32, 36, 100, 1296, 37, 29, 33, 30, 29, 18, 17, 18,
	        31, 27, 400, 684, 25, 5, 31, 12, 20, 10, 17, 36, 29, 330, 6, 6, 12, 18,
	        6, 35, 50, 11, 39, 2, 20, 40, 7, 5, 31, 11, 29, 26, 40, 33, 21, 7,
	        32, 28, 20, 10, 28, 17, 12, 10, 144, 28, 23, 60, 40, 3, 37, 10, 22, 5,
	        26, 33, 11, 37, 3, 29, 24, 19, 22, 31, 280, 36, 27, 23, 40, 15, 35, 20,
	        6, 35, 6, 21, 38, 10, 17, 8, 4, 4, 30, 4, 9, 33, 6, 2, 30, 16,
	        3, 5, 36, 11, 9, 21, 20, 37, 17, 21, 5, 12, 224, 36, 25, 23, 8, 40,
	        8, 36, 30, 120, 16, 39, 22, 37, 28, 24, 28, 22, 35, 36, 18, 2, 114, 25,
	        33, 4, 38, 34, 20, 2, 9, 39, 24, 30, 22, 8, 17, 17, 17
	    };
	    std::cout << "[meal #10] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 33079) {
	        std::cout << "FAIL: expected 33079 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 106457
	        // total cost if only discounting with coupons: 79341
	        // total cost if always applying punchcard: 91177
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #11
        // # meals == 1807
	    std::vector<cost> sample_input = {
	        19, 17, 19, 8, 266, 17, 4, 2400, 10, 4, 12, 26, 11, 19, 11, 24, 130, 2,
	        9, 32, 15, 35, 26, 23, 33, 22, 4, 26, 5, 30, 400, 18, 16, 20, 102, 22,
	        27, 4, 32, 19, 99, 31, 23, 11, 30, 14, 10, 24, 15, 26, 38, 11, 9, 30,
	        4, 231, 42, 14, 100, 28, 21, 28, 24, 33, 7, 21, 35, 18, 42, 16, 3, 11,
	        3, 37, 5, 12, 14, 240, 21, 31, 9, 32, 11, 40, 28, 4, 9, 31, 6, 12,
	        36, 4, 40, 12, 5, 10, 23, 14, 78, 42, 13, 37, 16, 24, 12, 8, 3, 32,
	        39, 24, 12, 65, 9, 18, 27, 34, 15, 30, 7, 13, 20, 21, 12, 945, 28, 33,
	        144, 3, 33, 13, 26, 6, 117, 26, 10, 23, 11, 28, 18, 39, 26, 13, 35, 72,
	        17, 31, 28, 39, 31, 34, 39, 1980, 31, 39, 4, 31, 34, 8, 18, 24, 156, 38,
	        6, 40, 36, 34, 37, 25, 37, 33, 78, 10, 35, 26, 38, 29, 350, 38, 2, 29,
	        6, 27, 13, 33, 45, 54, 2, 16, 8, 32, 21, 15, 13, 12, 28, 55, 32, 25,
	        6, 29, 32, 16, 36, 5, 14, 23, 10, 31, 23, 20, 15, 32, 34, 24, 80, 10,
	        324, 144, 22, 17, 3, 23, 19, 8, 40, 110, 306, 27, 25, 304, 31, 38, 9, 16,
	        27, 28, 34, 18, 20, 26, 28, 5, 6, 31, 34, 27, 30, 24, 6, 20, 40, 35,
	        28, 16, 117, 30, 66, 9, 11, 7, 17, 182, 23, 40, 17, 29, 32, 37, 17, 19,
	        11, 39, 24, 12, 7, 36, 28, 504, 37, 18, 5, 39, 29, 25, 9, 10, 37, 4,
	        9, 24, 38, 15, 15, 25, 30, 20, 18, 21, 8, 31, 20, 21, 19, 6, 5, 95,
	        16, 60, 31, 17, 24, 31, 25, 17, 27, 19, 7, 14, 33, 17, 8, 31, 32, 11,
	        9, 240, 140, 21, 22, 36, 31, 13, 21, 31, 32, 1296, 14, 26, 36, 37, 76, 34,
	        39, 18, 28, 38, 29, 16, 29, 21, 180, 10, 6, 22, 6, 39, 15, 15, 10, 26,
	        30, 10, 7, 81, 22, 3, 35, 90, 33, 20, 34, 23, 126, 34, 120, 24, 33, 30,
	        40, 9, 29, 8, 24, 12, 25, 2, 11, 38, 16, 60, 38, 39, 31, 13, 36, 17,
	        4, 15, 40, 34, 12, 30, 27, 9, 28, 10, 18, 30, 14, 22, 35, 25, 22, 22,
	        24, 24, 23, 40, 28, 15, 17, 198, 7, 224, 37, 126, 18, 39, 342, 24, 7, 13,
	        12, 27, 18, 37, 21, 22, 111, 10, 30, 7, 16, 33, 24, 8100, 26, 13, 12, 4,
	        18, 27, 50, 35, 7, 2, 24, 8, 39, 10, 35, 20, 31, 38, 12, 18, 22, 18,
	        25, 37, 7, 16, 17, 40, 23, 216, 28, 5, 12, 26, 5, 25, 17, 10, 38, 15,
	        34, 31, 33, 14, 32, 38, 24, 192, 35, 14, 50, 23, 3, 13, 32, 15, 200, 23,
	        28, 6, 28, 10, 37, 10, 40, 11, 60, 30, 9, 62, 35, 26, 11, 17, 33, 5,
	        25, 6, 26, 15, 11, 15, 37, 18, 207, 33, 28, 20, 29, 35, 13, 35, 25, 18,
	        28, 12, 14, 19, 7, 12, 20, 50, 19, 23, 14, 27, 40, 28, 36, 39, 18, 210,
	        20, 17, 22, 31, 3, 21, 21, 10, 32, 2, 12, 40, 38, 48, 147, 4, 32, 3,
	        2, 34, 35, 24, 39, 8, 7, 9, 38, 18, 30, 19, 8, 8, 5, 5, 22, 11,
	        8, 22, 36, 31, 32, 35, 6, 8, 40, 32, 192, 240, 9, 37, 75, 21, 9, 24,
	        32, 154, 17, 18, 8, 6, 4, 26, 11, 35, 35, 33, 31, 115, 29, 13, 33, 17,
	        22, 37, 22, 33, 19, 32, 37, 20, 33, 80, 40, 34, 162, 116, 2, 37, 4, 32,
	        28, 38, 7, 9, 96, 21, 19, 84, 15, 36, 39, 2, 8, 11, 36, 22, 18, 13,
	        29, 8, 26, 10, 29, 21, 13, 7, 6, 12, 37, 144, 20, 5, 4, 33, 26, 34,
	        8, 10, 22, 38, 28, 35, 16, 7, 12, 26, 40, 8, 2, 12, 26, 2, 18, 2,
	        37, 25, 9, 10, 34, 4, 2, 6, 11, 26, 192, 12, 25, 4, 37, 3, 18, 77,
	        16, 2, 40, 240, 34, 3, 6, 2, 4, 35, 13, 4, 60, 32, 12, 22, 38, 20,
	        4, 31, 30, 3, 8, 10, 125, 16, 176, 224, 19, 26, 64, 3, 40, 39, 26, 21,
	        190, 27, 33, 17, 21, 23, 9, 38, 5, 36, 9, 9, 26, 15, 40, 3, 32, 33,
	        32, 32, 24, 37, 12, 17, 40, 20, 20, 252, 3, 33, 20, 21, 16, 35, 21, 11,
	        31, 115, 12, 24, 2, 16, 25, 34, 6, 25, 37, 182, 17, 10, 29, 16, 20, 300,
	        75, 13, 39, 12, 21, 11, 33, 5, 16, 17, 28, 185, 35, 224, 33, 35, 34, 40,
	        11, 3, 40, 20, 28, 40, 24, 279, 7, 12, 20, 23, 37, 21, 8, 24, 9, 29,
	        4, 8, 12, 23, 5, 11, 23, 35, 33, 10, 18, 36, 26, 11, 110, 5, 21, 34,
	        35, 896, 29, 22, 32, 2, 2, 23, 54, 25, 3, 33, 23, 16, 26, 140, 11, 10,
	        11, 264, 175, 9, 17, 224, 7, 22, 8, 25, 20, 35, 20, 5, 56, 9, 950, 23,
	        96, 24, 15, 266, 39, 30, 18, 28, 13, 54, 7, 12, 65, 39, 9, 28, 3, 16,
	        7, 28, 42, 4, 2, 22, 16, 34, 30, 4, 4, 19, 190, 35, 32, 4, 21, 22,
	        9, 20, 28, 3, 35, 29, 29, 40, 31, 31, 20, 96, 8, 25, 39, 18, 15, 31,
	        532, 28, 34, 16, 35, 16, 9, 72, 17, 31, 4, 36, 15, 196, 112, 4, 33, 17,
	        25, 22, 27, 9, 7, 25, 2, 20, 11, 4, 128, 16, 40, 37, 36, 12, 19, 26,
	        11, 35, 45, 24, 11, 33, 36, 5, 35, 39, 168, 27, 4, 23, 304, 18144, 4, 15,
	        29, 16, 336, 12, 22, 24, 35, 34, 18, 40, 24, 6, 350, 25, 31, 198, 66, 3,
	        30, 14, 19, 11, 3, 8, 84, 38, 28, 13, 39, 30, 13, 19, 16, 60, 22, 38,
	        29, 3, 16, 33, 37, 31, 25, 2, 8, 32, 28, 37, 36, 35, 19, 36, 2, 15,
	        18, 37, 28, 36, 360, 4, 21, 42, 38, 28, 35, 26, 6, 20, 72, 8, 21, 26,
	        28, 37, 5, 4, 21, 40, 8, 8, 38, 32, 25, 6, 22, 35, 33, 22, 5, 180,
	        31, 19, 39, 152, 15, 150, 30, 5, 34, 150, 30, 5, 12, 38, 2560, 39, 288, 35,
	        29, 22, 32, 27, 48, 5, 13, 14, 11, 21, 63, 17, 16, 28, 23, 9, 24, 33,
	        40, 22, 23, 21, 9, 16, 32, 11, 38, 160, 34, 24, 9, 6, 23, 23, 12, 8,
	        2, 11, 17, 16, 11, 9, 3, 234, 13, 19, 31, 15, 21, 16, 25, 17, 18, 78,
	        40, 7, 84, 24, 29, 19, 37, 35, 40, 17, 32, 39, 10, 25, 38, 33, 16, 2,
	        7, 24, 21, 3, 24, 31, 23, 23, 15, 13, 15, 33, 8, 30, 33, 37, 6, 26,
	        18, 32, 2, 40, 5, 23, 6, 16, 26, 26, 31, 35, 5, 33, 540, 22, 20, 38,
	        2, 14, 28, 33, 33, 33, 16, 17, 192, 13, 33, 27, 320, 18, 6, 19, 10, 132,
	        14, 35, 40, 32, 3, 35, 14, 12, 96, 29, 9, 8, 250, 28, 38, 8, 21, 11,
	        5, 3, 8, 25, 33, 22, 7, 24, 3, 25, 52, 16, 14, 17, 10, 13, 232, 25,
	        10, 18, 38, 21, 19, 34, 35, 29, 23, 140, 12, 11, 39, 28, 35, 39, 16, 33,
	        16, 10, 13, 18, 200, 37, 15, 40, 114, 34, 150, 25, 11, 31, 25, 33, 15, 4,
	        19, 24, 6, 10, 111, 180, 24, 6, 9, 6, 19, 34, 8, 32, 33, 32, 8, 37,
	        22, 18, 27, 25, 195, 33, 280, 14, 17, 2, 37, 40, 4, 23, 27, 36, 27, 21,
	        22, 6, 3, 14, 21, 34, 24, 2, 38, 17, 22, 20, 13, 36, 31, 23, 9, 273,
	        13, 102, 9, 25, 35, 18, 30, 15, 3, 39, 168, 38, 10, 26, 14, 40, 35, 33,
	        22, 12, 38, 66, 40, 27, 11, 1330, 27, 38, 22, 648, 32, 16, 12, 21, 88, 34,
	        14, 25, 6, 231, 20, 37, 126, 33, 30, 31, 20, 14, 11, 37, 22, 31, 39, 15,
	        48, 21, 4, 33, 18, 28, 7, 21, 31, 29, 6, 16, 4, 35, 117, 14, 24, 234,
	        37, 9, 6, 3, 39, 342, 20, 10, 31, 7, 22, 3, 19, 23, 5, 44, 16, 20,
	        160, 21, 27, 5, 14, 5, 248, 28, 30, 7, 28, 13, 40, 3, 31, 31, 144, 33,
	        15, 175, 11, 238, 8, 26, 31, 11, 10, 70, 40, 19, 6, 15, 27, 33, 8, 24,
	        168, 133, 40, 31, 15, 5, 18, 22, 11, 70, 28, 25, 29, 130, 6, 25, 184, 108,
	        22, 75, 4, 23, 18, 25, 29, 13, 14, 36, 29, 12, 156, 34, 23, 26, 20, 7,
	        5130, 32, 33, 31, 68, 224, 19, 24, 33, 24, 2, 35, 40, 35, 7, 7, 350, 14,
	        40, 39, 37, 27, 7, 5, 20, 35, 9, 680, 32, 10, 3, 31, 12, 1020, 37, 66,
	        14, 20, 70, 34, 1600, 37, 34, 2, 19, 34, 19, 39, 40, 35, 26, 20, 13, 32,
	        40, 17, 11, 23, 20, 39, 27, 27, 21, 40, 39, 24, 8, 10, 19, 189, 38, 132,
	        26, 29, 28, 22, 25, 30, 4, 7, 39, 14, 12, 6, 152, 35, 3, 38, 56, 6,
	        7, 31, 175, 12, 26, 26, 17, 38, 13, 217, 7, 9, 208, 16, 29, 25, 10, 40,
	        2, 21, 26, 36, 5, 27, 37, 38, 13, 19, 8, 30, 35, 6, 26, 10, 34, 48,
	        35, 40, 4, 32, 72, 32, 17, 42, 9, 38, 114, 370, 104, 21, 27, 7, 39, 12,
	        6, 34, 11, 34, 21, 8, 21, 28, 4, 30, 12, 6, 2, 32, 32, 14, 560, 36,
	        80, 14, 16, 34, 31, 19, 21, 4, 32, 37, 2, 23, 25, 32, 360, 40, 22, 36,
	        30, 23, 9, 34, 175, 36, 26, 232, 23, 21, 23, 23, 20, 27, 34, 12, 33, 30,
	        6, 34, 96, 240, 12, 13, 16, 25, 28, 18, 39, 324, 32, 26, 4, 15, 18, 37,
	        5, 120, 35, 9, 7, 25, 39, 30, 14, 29, 39, 7, 5, 36, 12, 38, 37, 36,
	        38, 21, 19, 22, 17, 38, 14, 24, 2, 29, 92, 29, 6, 8, 34, 9, 23, 15,
	        6, 14, 19, 17, 17, 36, 5, 40, 29, 6, 180, 6, 13, 96, 10, 135, 5, 40,
	        48, 190, 45, 35, 28, 32, 306
	    };
	    std::cout << "[meal #11] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 35689) {
	        std::cout << "FAIL: expected 35689 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 114353
	        // total cost if only discounting with coupons: 85142
	        // total cost if always applying punchcard: 101216
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #12
        // # meals == 1204
	    std::vector<cost> sample_input = {
	        14, 30, 7, 25, 17, 22, 31, 24, 16, 37, 3, 10, 147, 24, 15, 15, 6, 23,
	        117, 22, 37, 34, 14, 32, 26, 17, 35, 5, 40, 96, 13, 6, 29, 14, 62, 21,
	        29, 2, 32, 20, 19, 72, 9, 38, 5, 40, 11, 310, 27, 4, 21, 9, 12, 9,
	        30, 33, 7, 30, 18, 11, 78, 21, 35, 27, 37, 510, 10, 37, 30, 36, 21, 10,
	        6, 20, 20, 26, 23, 27, 34, 15, 3, 21, 33, 22, 6, 21, 7, 36, 10, 16,
	        3, 38, 40, 13, 13, 18, 38, 25, 8, 11, 38, 36, 21, 36, 13, 22, 19, 126,
	        18, 29, 30, 33, 8, 84, 24, 14, 21, 5, 3, 9, 37, 88, 6, 16, 20, 25,
	        39, 14, 20, 36, 23, 16, 19, 16, 21, 8, 4, 32, 35, 32, 20, 38, 84, 26,
	        24, 32, 15, 12096, 13, 23, 35, 5, 11, 16, 20, 2, 6, 37, 23, 92, 29, 18,
	        34, 14, 34, 5, 33, 12, 13, 34, 33, 6, 18, 2, 2, 35, 9, 21, 36, 30,
	        29, 31, 34, 12, 28, 186, 26, 220, 5, 12, 20, 30, 14, 27, 8, 9, 38, 2,
	        11, 6, 27, 25, 34, 252, 66, 19, 234, 78, 33, 21, 5, 31, 29, 13, 33, 38,
	        224, 13, 22, 28, 37, 30, 3, 9800, 15, 20, 35, 13, 3, 9, 22, 29, 4, 18,
	        10, 16, 16, 7, 21, 32, 63, 30, 37, 21, 39, 40, 23, 342, 28, 32, 15, 37,
	        32, 9, 17, 210, 24, 13, 24, 13, 28, 18, 306, 20, 39, 17, 5, 14, 5, 38,
	        31, 6, 145, 30, 351, 33, 11, 14, 31, 8, 6, 18, 25, 3, 1568, 12, 32, 24,
	        38, 23, 40, 15, 24, 70, 38, 10, 11, 25, 8, 72, 20, 38, 2, 35, 6, 9,
	        32, 17, 12, 37, 31, 28, 5, 3, 24, 36, 22, 28, 28, 25, 10, 27, 100, 11,
	        21, 2, 5, 36, 16, 16, 11, 30, 4, 4, 37, 31, 39, 30, 33, 35, 27, 37,
	        12, 18, 32, 224, 11, 27, 11, 6, 150, 29, 22, 23, 17, 80, 24, 34, 28, 108,
	        23, 26, 2, 19, 156, 18, 33, 60, 33, 16, 12, 19, 26, 21, 11, 21, 16, 33,
	        9, 5, 1665, 30, 147, 13, 26, 13, 28, 11, 13, 21, 37, 119, 240, 39, 26, 20,
	        12, 25, 5, 17, 40, 36, 40, 58, 34, 33, 23, 10, 37, 34, 168, 44, 32, 40,
	        25, 30, 33, 112, 92, 39, 9, 111, 39, 15, 16, 28, 36, 160, 189, 23, 9, 21,
	        11, 12, 7, 135, 24, 2, 4, 9, 13, 30, 15, 7, 39, 8, 35, 18, 38, 34,
	        96, 10, 270, 130, 27, 2, 3, 11, 15, 34, 35, 29, 3, 14, 4, 27, 34, 27,
	        20, 25, 26, 19, 3, 3, 216, 28, 21, 29, 9, 38, 29, 16, 19, 12, 18, 27,
	        22, 2, 31, 12, 4, 16, 19, 9, 28, 9, 13, 37, 20, 5, 8, 15, 29, 24,
	        114, 8, 26, 7, 14, 36, 12, 9, 40, 11, 27, 40, 7, 27, 40, 25, 259, 5,
	        35, 9, 37, 13, 32, 34, 2, 40, 4, 31, 25, 4, 8, 27, 28, 16, 9, 96,
	        42, 28, 21, 4, 9, 9, 6, 23, 29, 39, 18, 70, 30, 21, 35, 18, 34, 150,
	        20, 185, 30, 7, 30, 31, 38, 16, 17, 3, 3, 864, 3, 5, 264, 4, 21, 40,
	        29, 16, 8, 34, 31, 825, 15, 11, 32, 8928, 11, 28, 22, 32, 11, 40, 195, 31,
	        37, 51, 22, 4, 7, 16, 28, 15, 22, 8, 19, 11, 38, 49, 10, 38, 27, 13,
	        28, 14, 39, 6, 38, 39, 280, 22, 6, 300, 26, 21, 38, 30, 13, 11, 18, 14,
	        14, 6, 270, 1554, 19, 31, 296, 36, 21, 21, 7, 54, 12, 3, 33, 288, 29, 19,
	        21, 32, 17, 25, 16, 29, 90, 12, 20, 12, 35, 23, 111, 32, 10, 5, 25, 22,
	        28, 4, 17, 26, 7, 18, 12, 38, 29, 33, 25, 7, 30, 12, 22, 11, 33, 144,
	        8, 18, 78, 5, 21, 21, 22, 13, 35, 16, 27, 8, 18, 22, 14, 17, 24, 16,
	        110, 8, 4, 37, 22, 8, 333, 13, 38, 38, 3, 6, 33, 6, 17, 36, 168, 14,
	        39, 4, 30, 140, 26, 7, 26, 32, 18, 76, 28, 36, 25, 10, 18, 31, 10, 5,
	        392, 25, 36, 14, 23, 45, 35, 26, 6, 2, 31, 18, 3, 37, 37, 12, 32, 5,
	        28, 40, 27, 31, 54, 17, 16, 12, 7, 48, 22, 31, 3, 828, 11, 2, 37, 23,
	        60, 11, 15, 116, 2, 464, 37, 20, 45, 12, 5, 216, 37, 2, 99, 33, 22, 4,
	        12, 21, 8, 17, 29, 40, 20, 20, 11, 31, 36, 35, 22, 30, 35, 200, 22, 38,
	        37, 13, 21, 9, 19, 9, 35, 14, 40, 36, 7, 31, 2, 14, 26, 4, 35, 380,
	        28, 160, 8, 4, 27, 21, 33, 35, 13, 22, 25, 33, 8, 48, 24, 7, 68, 31,
	        60, 16, 39, 96, 19, 27, 190, 35, 34, 26, 52, 27, 2, 19, 32, 17, 40, 18,
	        240, 8, 22, 10, 30, 12, 3, 21, 19, 22, 24, 29, 38, 15, 19, 19, 20, 10,
	        33, 7, 30, 42, 28, 16, 15, 9, 400, 26, 18, 9, 28, 18, 6, 78, 40, 38,
	        12, 33, 20, 48, 2, 132, 36, 35, 24, 952, 21, 4, 37, 26, 37, 22, 324, 20,
	        28, 21, 51, 6, 7, 8, 2400, 9, 21, 51, 3, 18, 27, 30, 14, 38, 11, 38,
	        13, 28, 1944, 7, 16, 30, 28, 29, 11, 19, 12, 37, 13, 35, 34, 99, 30, 7,
	        4, 17, 4, 32, 26, 27, 24, 26, 32, 31, 26, 18, 4, 33, 18, 10, 29, 16,
	        39, 8, 31, 10, 26, 18, 114, 27, 9, 156, 38, 54, 20, 23, 14, 34, 35, 40,
	        32, 14, 8, 13, 19, 21, 3, 4, 28, 35, 25, 25, 32, 102, 2, 5, 18, 17,
	        37, 18, 20, 13, 28, 30, 14, 37, 32, 9, 25, 9, 33, 9, 21, 11, 171, 25,
	        17, 22, 64, 36, 6, 13, 30, 30, 28, 24, 7, 19, 24, 6480, 39, 38, 21, 24,
	        5, 16, 6, 304, 31, 136, 37, 6, 8, 16, 40, 30, 20, 39, 26, 11, 35, 20,
	        37, 40, 7, 34, 66, 119, 29, 200, 24, 37, 15, 9, 4, 3, 27, 31, 38, 20,
	        13, 11, 22, 32, 24, 20, 170, 21, 84, 30, 21, 17, 32, 7, 3, 22, 11, 30,
	        12, 12, 40, 22, 20, 19, 4, 18, 18, 32, 144, 12, 28, 160, 91, 25, 20, 18,
	        38, 31, 14, 56, 72, 234, 18, 234, 39, 19, 36, 13, 9, 12, 2, 13, 10, 12,
	        35, 38, 30, 11, 21, 900, 35, 196, 32, 26, 36, 26, 30, 19, 10, 38, 32, 180,
	        37, 11, 200, 4, 20, 2660, 26, 38, 12, 32, 14, 18, 28, 33, 18, 13, 24, 34,
	        19, 15, 34, 38, 20, 170, 91, 22, 25, 12, 17, 33, 248, 13, 19, 12, 26, 23,
	        36, 28, 8, 14, 6, 5, 3, 28, 38, 18, 37, 16, 7, 24, 45, 16
	    };
	    std::cout << "[meal #12] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 23422) {
	        std::cout << "FAIL: expected 23422 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 95926
	        // total cost if only discounting with coupons: 71520
	        // total cost if always applying punchcard: 82531
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #13
        // # meals == 475
	    std::vector<cost> sample_input = {
	        80, 28, 17, 31, 2, 6, 9, 2, 48, 12, 20, 12, 20, 18, 13, 29, 14, 14,
	        160, 288, 24, 10, 5, 5, 20, 39, 34, 14, 25, 35, 35, 20, 34, 7, 8, 35,
	        18, 290, 180, 34, 23, 37, 15, 2, 31, 16, 23, 10, 38, 16, 36, 23, 22, 20,
	        29, 23, 37, 640, 11, 18, 17, 26, 25, 11, 15, 32, 29, 16, 48, 25, 10, 120,
	        37, 6, 38, 27, 15, 7, 39, 38, 21, 9, 5, 17, 25, 27, 4, 21, 20, 8,
	        24, 34, 20, 7, 5, 3, 6, 10, 18, 20, 11, 20, 22, 6, 32, 13, 5, 11,
	        29, 13, 22, 21, 37, 24, 31, 296, 37, 17, 34, 8, 7, 17, 120, 36, 35, 39,
	        11, 15, 37, 29, 10, 35, 30, 6, 155, 27, 9, 37, 37, 20, 140, 144, 37, 30,
	        3, 12, 5, 40, 30, 28, 29, 31, 58, 85, 6, 19, 24, 13, 210, 15, 31, 33,
	        10, 882, 39, 35, 32, 23, 24, 39, 21, 24, 40, 4, 11, 288, 243, 27, 17, 39,
	        38, 259, 31, 36, 34, 11, 32, 12, 31, 11, 4, 32, 7, 3, 7, 12, 34, 29,
	        36, 32, 5, 72, 7, 31, 37, 5, 19, 21, 29, 33, 16, 240, 19, 12, 23, 310,
	        40, 27, 26, 25, 21, 10, 7, 34, 21, 16, 6, 23, 35, 31, 4, 33, 5, 16,
	        130, 40, 40, 12, 20, 30, 5, 11, 23, 3, 29, 17, 14, 5, 21, 360, 23, 17,
	        26, 27, 11, 182, 17, 4, 50, 2, 12, 150, 4, 8, 23, 370, 9, 238, 33, 37,
	        16, 228, 21, 17, 145, 34, 34, 102, 29, 26, 11, 25, 7, 5, 2, 27, 29, 160,
	        3, 33, 10, 16, 104, 27, 18, 31, 27, 74, 8, 18, 15, 36, 20, 5, 17, 39,
	        34, 152, 31, 6, 5, 33, 31, 203, 13, 18, 168, 16, 24, 29, 2, 19, 10, 28,
	        34, 30, 13, 119, 8, 30, 30, 35, 6, 10, 27, 88, 8, 7, 22, 192, 37, 16,
	        64, 11, 15, 17, 13, 36, 32, 40, 9, 4, 31, 26, 3, 13, 15, 29, 7, 729,
	        31, 7, 33, 24, 32, 30, 37, 40, 16, 26, 23, 7, 25, 32, 9, 22, 17, 19,
	        23, 9, 20, 12, 21, 39, 12, 38, 12, 207, 19, 6, 3, 10, 11, 14, 14, 21,
	        28, 4, 27, 40, 6, 20, 39, 7, 32, 7, 33, 5, 36, 10, 19, 36, 28, 28,
	        37, 19, 2, 2, 34, 4, 9, 39, 4, 36, 6, 39, 4, 20, 28, 25, 115, 320,
	        29, 96, 26, 19, 21, 20, 10, 6, 21, 960, 39, 25, 30, 18, 28, 10, 29, 16,
	        22, 26, 128, 9, 8, 2, 27, 22, 27, 18, 21, 24, 99, 3, 29, 6, 102, 23,
	        10, 1392, 21, 31, 120, 24, 8
	    };
	    std::cout << "[meal #13] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 9106) {
	        std::cout << "FAIL: expected 9106 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 21546
	        // total cost if only discounting with coupons: 15992
	        // total cost if always applying punchcard: 18232
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #14
        // # meals == 650
	    std::vector<cost> sample_input = {
	        126, 32, 19, 32, 10, 120, 171, 18, 23, 35, 3, 17, 22, 18, 4, 15, 6, 18,
	        370, 22, 28, 35, 147, 18, 12, 12, 28, 21, 18, 19, 39, 27, 38, 12, 13, 16,
	        21, 68, 14, 31, 28, 162, 19, 4, 34, 35, 14, 40, 34, 8, 2142, 17, 30, 2070,
	        36, 2, 33, 4, 21, 15, 11, 36, 17, 27, 2, 39, 6, 21, 10, 39, 17, 14,
	        31, 12, 6, 4, 33, 4, 38, 19, 40, 11, 39, 30, 25, 39, 30, 104, 2, 4,
	        8, 17, 7, 26, 21, 31, 40, 4, 14, 12, 17, 17, 9, 2, 21, 25, 9, 10,
	        26, 20, 8, 12, 18, 27, 31, 10, 38, 130, 32, 4, 13, 234, 7, 4, 117, 4,
	        29, 10, 72, 144, 33, 35, 104, 38, 27, 93, 31, 306, 8, 25, 14, 12, 4, 70,
	        3, 1200, 9, 48, 27, 28, 11, 1188, 35, 6, 18, 32, 29, 2, 36, 19, 27, 14,
	        34, 13, 19, 24, 9, 25, 23, 37, 255, 240, 70, 48, 33, 40, 4, 22, 9, 32,
	        33, 9, 14, 29, 3120, 26, 203, 12, 31, 136, 40, 56, 7, 30, 2349, 3, 29, 36,
	        35, 36, 2, 19, 26, 24, 8, 17, 21, 17, 35, 26, 37, 28, 15, 20, 5, 24,
	        35, 37, 28, 200, 27, 9, 40, 840, 3, 10, 16, 31, 2, 10, 19, 12, 12, 24,
	        13, 3, 12, 175, 138, 1260, 35, 38, 26, 34, 19, 6, 8, 23, 7, 12, 17, 24,
	        28, 32, 9, 20, 14, 25, 306, 21, 28, 12, 25, 8, 37, 30, 38, 33, 9, 15,
	        9, 29, 28, 32, 17, 4, 36, 13, 280, 21, 12, 27, 18, 16, 16, 30, 38, 39,
	        26, 19, 20, 38, 12, 27, 39, 4, 40, 42, 42, 13, 35, 5, 35, 24, 576, 27,
	        31, 16, 21, 77, 20, 37, 260, 102, 36, 15, 3, 112, 29, 7, 19, 37, 17, 23,
	        34, 24, 16, 33, 203, 28, 29, 55, 11, 14, 2, 29, 5, 18, 12, 35, 7, 25,
	        37, 8, 320, 30, 2970, 360, 21, 23, 7, 96, 30, 39, 1323, 33, 25, 6, 18, 11,
	        39, 10, 288, 182, 17, 35, 39, 31, 14, 25, 18, 10, 40, 21, 31, 15, 232, 21,
	        14, 16, 192, 11, 24, 22, 19, 3, 26, 14, 28, 19, 33, 35, 29, 112, 28, 32,
	        20, 22, 3, 34, 30, 21, 112, 13, 40, 29, 7, 38, 27, 7, 30, 21, 2, 40,
	        6, 114, 36, 104, 20, 25, 38, 259, 75, 13, 18, 33, 40, 21, 18, 27, 4, 36,
	        39, 14, 38, 14, 28, 16, 1944, 2, 5, 9, 3, 39, 3, 38, 16, 34, 19, 28,
	        3, 5, 34, 4, 17, 19, 3, 36, 40, 23, 27, 36, 7, 19, 38, 19, 29, 40,
	        20, 399, 32, 20, 210, 40, 11, 31, 35, 8, 27, 32, 21, 7, 30, 34, 20, 15,
	        100, 8, 210, 2, 66, 40, 5, 8, 40, 3, 26, 40, 14, 21, 19, 154, 33, 30,
	        37, 39, 4, 11, 15, 6, 16, 33, 10, 27, 6, 36, 15, 18, 770, 37, 26, 96,
	        36, 28, 37, 23, 7, 27, 117, 3, 40, 31, 35, 6, 40, 40, 99, 15, 36, 14,
	        10, 39, 39, 31, 9, 150, 18, 40, 21, 31, 30, 19, 16, 40, 130, 21, 7, 37,
	        31, 19, 8, 37, 96, 6, 15, 29, 864, 24, 76, 264, 120, 330, 34, 37, 17, 52,
	        25, 2, 5, 37, 25, 14, 5, 5, 24, 40, 24, 15, 7, 40, 24, 2, 13, 7,
	        17, 30, 2, 19, 28, 26, 16, 18, 8, 32, 8, 16, 10, 20, 4, 11, 21, 21,
	        336, 189, 12, 13, 7, 30, 14, 17, 7, 7, 23, 24, 35, 54, 30, 8, 31, 33,
	        33, 14, 33, 14, 19, 25, 31, 918, 20, 7, 11, 20, 38, 5, 21, 28, 2, 2,
	        18, 15
	    };
	    std::cout << "[meal #14] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 15306) {
	        std::cout << "FAIL: expected 15306 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 46801
	        // total cost if only discounting with coupons: 34881
	        // total cost if always applying punchcard: 39484
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }

    {
        // sample #15
        // # meals == 1462
	    std::vector<cost> sample_input = {
	        3, 16, 3, 28, 208, 37, 69, 15, 3, 28, 14, 108, 34, 15, 2, 12, 30, 32,
	        32, 10, 27, 17, 54, 19, 25, 26, 56, 203, 99, 19, 13, 10, 160, 21, 1554, 25,
	        37, 30, 26, 18, 23, 13, 32, 36, 3, 60, 13, 31, 17, 34, 6, 34, 17, 12,
	        23, 40, 29, 28, 30, 36, 40, 6, 22, 14, 138, 36, 55, 15, 32, 1020, 10, 26,
	        12, 37, 33, 24, 16, 39, 14, 18, 3, 3, 17, 28, 35, 33, 24, 26, 182, 24,
	        35, 23, 266, 29, 35, 25, 4, 29, 9, 10, 24, 13, 38, 608, 23, 39, 10, 35,
	        5, 7, 18, 33, 26, 8, 30, 17, 28, 34, 40, 5, 28, 7, 10, 8, 38, 3,
	        8, 19, 180, 228, 70, 26, 17, 12, 21, 2, 34, 3, 27, 21, 39, 33, 22, 29,
	        27, 27, 40, 26, 12, 26, 21, 3, 4, 16, 10, 32, 20, 28, 26, 30, 2, 3,
	        4, 32, 5, 11, 62, 42, 11, 24, 22, 31, 5, 19, 6, 2, 5, 40, 148, 9,
	        3, 18, 170, 35, 14, 8, 756, 39, 22, 5, 39, 36, 27, 32, 12, 18, 36, 23,
	        21, 20, 36, 8, 33, 2, 4, 27, 27, 21, 25, 15, 13, 32, 38, 32, 14, 26,
	        10, 10, 66, 37, 32, 4, 27, 39, 234, 36, 11, 12, 18, 60, 31, 256, 33, 290,
	        23, 19, 36, 22, 31, 39, 35, 22, 17, 36, 21, 28, 35, 20, 130, 24, 20, 560,
	        37, 10, 7, 38, 33, 11, 34, 17, 33, 23, 36, 37, 33, 25, 10, 13, 19, 15,
	        14, 33, 272, 8, 23, 39, 31, 10, 7, 2, 315, 39, 20, 4, 22, 27, 1008, 15,
	        2, 560, 5, 29, 26, 186, 26, 8, 21, 16, 23, 26, 6, 9, 13, 25, 16, 4,
	        36, 10, 20, 11, 27, 35, 36, 16, 19, 216, 3, 10, 11, 18, 26, 13, 93, 9,
	        32, 32, 4, 29, 896, 30, 25, 2, 16560, 7, 28, 22, 22, 25, 3, 25, 13, 24,
	        252, 27, 3, 22, 17, 33, 2, 24, 22, 3, 35, 25, 18, 14, 20, 24, 21, 20,
	        15, 36, 39, 11, 5, 207, 36, 2, 23, 23, 2, 17, 3, 33, 36, 2, 8, 9,
	        29, 22, 52, 31, 26, 22, 40, 28, 27, 22, 570, 3, 24, 24, 1152, 25, 8, 21,
	        35, 35, 29, 14, 21, 39, 37, 16, 114, 40, 22, 32, 189, 19, 9, 28, 24, 17,
	        20, 14, 21, 19, 152, 120, 4, 8, 40, 10, 15, 36, 31, 13, 6, 135, 10, 31,
	        180, 32, 28, 18, 19, 144, 9, 11, 72, 23, 21, 2, 30, 37, 3, 29, 11, 35,
	        6, 2, 2, 34, 14, 16, 37, 3, 15, 204, 5, 80, 25, 33, 84, 3, 3, 37,
	        7, 37, 35, 18, 32, 12, 39, 34, 29, 14, 39, 165, 8, 2, 27, 36, 3, 4,
	        19, 39, 15, 35, 72, 9, 20, 34, 30, 10, 22, 19, 35, 28, 108, 26, 4, 390,
	        4, 14, 3, 25, 360, 78, 160, 87, 296, 186, 130, 26, 34, 585, 14, 35, 4, 39,
	        16, 26, 4, 35, 7, 20, 120, 35, 15, 13, 10, 34, 2, 7, 23, 330, 28, 18,
	        12, 27, 22, 3, 15, 32, 22, 5, 110, 37, 2, 19, 15, 29, 19, 38, 25, 28,
	        22, 304, 20, 36, 25, 22, 612, 21, 6, 33, 13, 17, 17, 23, 17, 27, 26, 26,
	        31, 25, 882, 10, 11, 12, 12, 29, 21, 13, 40, 14, 108, 21, 30, 19, 31, 19,
	        3, 19, 27, 26, 9, 19, 19, 24, 3, 25, 26, 40, 13, 40, 204, 18, 32, 2340,
	        21, 96, 39, 12, 15, 28, 14, 40, 28, 26, 222, 63, 231, 26, 35, 28, 8, 30,
	        279, 8, 16, 5, 34, 33, 22, 2100, 15, 9, 38, 37, 54, 238, 15, 30, 24, 15,
	        9, 11, 6, 33, 21, 39, 29, 6, 3, 175, 25, 4, 4, 18, 30, 33, 5, 23,
	        38, 28, 24, 33, 23, 8, 37, 78, 13, 40, 31, 20, 8, 182, 7, 25, 36, 24,
	        33, 132, 22, 30, 14, 12, 15, 23, 6, 16, 35, 39, 2240, 19, 20, 35, 15, 17,
	        3, 28, 23, 21, 14, 18, 33, 28, 18, 2, 11, 13, 23, 19, 11, 185, 6, 13,
	        31, 16, 27, 16, 5, 16, 34, 6, 5, 39, 22, 4, 17, 26, 28, 12, 26, 22,
	        27, 38, 30, 37, 28, 7, 2, 124, 37, 32, 19, 13, 18, 24, 40, 13, 22, 39,
	        18, 297, 21, 18, 13, 9, 16, 17, 39, 9, 36, 4, 24, 17, 9, 2, 14, 3,
	        21, 38, 15, 279, 11, 39, 21, 39, 5, 36, 13, 3, 7, 33, 15, 26, 11, 27,
	        32, 14, 4, 6, 28, 19, 16, 23, 6, 39, 29, 13, 28, 31, 40, 28, 24, 11,
	        26, 29, 13, 8, 11, 9, 2, 29, 5, 28, 35, 16, 8, 28, 24, 33, 33, 37,
	        30, 39, 37, 4, 23, 38, 18, 33, 19, 32, 8, 456, 33, 36, 22, 7, 11, 4,
	        12, 29, 6, 20, 5, 14, 31, 30, 6, 432, 22, 21, 9, 3, 25, 35, 7, 40,
	        26, 36, 13, 15, 6, 19, 23, 13, 5, 19, 38, 23, 6, 7, 29, 310, 4, 23,
	        20, 40, 11, 27, 136, 3, 29, 4, 132, 234, 2, 9, 2, 31, 13, 132, 20, 7,
	        32, 24, 6, 176, 16, 18, 20, 5, 22, 9, 12, 190, 21, 32, 25, 18, 7, 31,
	        36, 38, 18, 40, 12, 29, 26, 7, 34, 15, 31, 88, 26, 22, 8, 38, 13, 39,
	        325, 2, 370, 11, 174, 36, 3, 300, 36, 2, 29, 31, 102, 29, 21, 25, 34, 28,
	        38, 19, 31, 38, 6, 40, 18, 37, 13, 8, 36, 29, 50, 240, 26, 38, 7, 1170,
	        20, 300, 11, 2, 14, 34, 56, 25, 15, 26, 5, 126, 2, 24, 13, 19, 4, 39,
	        40, 12, 24, 20, 34, 29, 40, 22, 2600, 4, 22, 25, 26, 25, 18, 7, 8, 10,
	        10, 32, 20, 17, 7, 3, 14, 35, 27, 25, 9, 18, 30, 23, 28, 36, 1872, 11,
	        11, 38, 17, 38, 3, 32, 24, 9, 28, 310, 26, 18, 585, 78, 312, 18, 29, 39,
	        34, 10, 8, 18, 38, 24, 26, 322, 9, 11, 28, 28, 26, 3, 29, 8, 5, 20,
	        200, 30, 16, 16, 28, 10, 7, 256, 40, 20, 10, 20, 174, 24, 17, 10, 9, 7,
	        28, 24, 12, 1296, 45, 30, 14, 40, 3213, 29, 6, 8, 18, 32, 16, 33, 7, 24,
	        5, 13, 23, 23, 25, 24, 140, 29, 85, 144, 36, 513, 23, 15, 35, 5, 4, 40,
	        25, 38, 30, 2, 36, 27, 12, 28, 20, 200, 20, 154, 75, 9, 15, 33, 16, 29,
	        3, 13, 19, 34, 31, 28, 31, 28, 16, 171, 30, 8, 35, 36, 37, 16, 175, 21,
	        25, 17, 152, 39, 31, 25, 34, 20, 36, 7, 15, 2, 31, 19, 10, 32, 21, 26,
	        12, 2, 10, 84, 162, 10, 17, 25, 22, 160, 36, 36, 6, 40, 30, 207, 35, 12,
	        6, 35, 6, 29, 39, 10, 40, 2, 3, 38, 11, 252, 39, 4, 35, 34, 39, 17,
	        26, 35, 114, 34, 9, 37, 6, 30, 25, 23, 8, 16, 26, 4, 13, 24, 85, 22,
	        26, 22, 29, 22, 23, 16, 198, 21, 11, 3, 31, 31, 16, 7, 26, 29, 108, 18,
	        33, 27, 29, 36, 19, 6, 37, 6, 2, 60, 8, 16, 16, 259, 17, 35, 29, 25,
	        20, 30, 22, 3, 203, 35, 22, 225, 17, 19, 39, 1554, 16, 11, 2, 28, 8, 36,
	        21, 28, 220, 36, 25, 6, 39, 126, 8, 4, 14, 24, 16, 12, 189, 3, 18, 24,
	        31, 48, 19, 21, 40, 21, 2, 28, 32, 30, 5, 25, 28, 34, 24, 182, 115, 34,
	        31, 5, 174, 160, 28, 38, 130, 31, 16, 14, 10, 11, 8, 30, 15, 18, 28, 8,
	        10, 38, 30, 5, 30, 12, 26, 36, 19, 6, 9, 28, 35, 5, 35, 32, 13, 36,
	        16200, 40, 5, 304, 17, 21, 5, 9, 135, 38, 18, 36, 33, 228, 35, 15, 35, 31,
	        19, 10, 8, 12, 21, 38, 28, 10, 29, 33, 20, 34, 10, 28, 11, 37, 39, 33,
	        19, 21, 5, 27, 8, 31, 36, 37, 32, 65, 72, 7, 3, 66, 225, 6, 13, 30,
	        2, 17, 40, 120, 207, 15, 21, 116, 32, 6, 30, 20, 5, 30, 15, 37, 15, 29,
	        39, 38, 13, 15, 20, 25, 31, 13, 70, 35, 35, 18, 40, 4, 12, 23, 30, 16,
	        20, 54, 22, 16, 2, 22, 4, 8, 27, 31, 38, 2, 17, 36, 140, 3, 25, 3,
	        252, 21, 36, 35
	    };
	    std::cout << "[meal #15] ... " << std::endl;
	    cost student_answer = best_price(sample_input);
	    if (student_answer != 31628) {
	        std::cout << "FAIL: expected 31628 but got " << student_answer << std::endl;
	        // for your reference in debugging the above test case:
	        // total cost with no discount or promotion: 115415
	        // total cost if only discounting with coupons: 86054
	        // total cost if always applying punchcard: 101367
	    } else {
	        std::cout << "PASS" << std::endl;
	    }
    }
    vector<cost> c{3, 3, 3, 3, 3, 3, 100};
    std::cout << "[meal #spec] ... " << std::endl;
    cost student_answer = best_price(c);
    if (student_answer != 17) {
        std::cout << "FAIL: expected 31628 but got " << student_answer << std::endl;
        // for your reference in debugging the above test case:
        // total cost with no discount or promotion: 115415
        // total cost if only discounting with coupons: 86054
        // total cost if always applying punchcard: 101367
    } else {
        std::cout << "PASS" << std::endl;
    }

}
